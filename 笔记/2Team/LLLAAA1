##### 由于大二会学到网页设计，所以对HTML和XHTML有一定的了解，但是没有具体了解过HTML5，所以以下笔记具体是关于HTML5我学到的内容。
`
var myVideo=document.getElementById("video1");
function playPause()
{ 
if (myVideo.paused) 
  myVideo.play(); 
else 
  myVideo.pause(); 
}`
var myVideo=document.getElementById("video1");表示获取播放的正常资源。起初不是很懂这个过程，按照我的理解，它应该是在点击playpause这个按钮的时候，如果点暂停，它就会播放，这样是明显说不通的，所以我百度了相关内容，了解到这段代码的意思是：调用playpause函数，当点击playpause按钮的时候，若视频处于暂停状态，则恢复为播放，反之暂停视频。
看到var myVideo=document.getElementById("video1");就想查找一下获取视频资源是否有其他表达方式，所以就查找到了HTML5视频嵌入。
##### HTML5视频嵌入：
https://www.cnblogs.com/ShaYeBlog/p/7068188.html
优点：在网页中使用HTML5视频嵌入技术的最大优点是不需要任何第三方插件（比如Adobe的flash）。
过程：
1.	首先要通过百度下载video.js。
2.	先把要用到的js\css\swf都加载到html页面上。
3. 加入下面的代码：
<video id="my_video_1"  class="video-js vjs-default-skin" 
Controlspreload="auto" width="640"height="480"poster="video-js/my_video_poster.png"    data-setup="{}">
##### URL：
统一资源定位符是对可以从互联网上得到的资源的位置和访问方法的一种简洁的表示，是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。
##### 拖放（drag和drop）
拖放是HTML5标准的组成部分，在HTML5中，任何元素都可以进行拖放。
1.在拖放实例中，首先应该设置元素为可拖放，具体操作为把draggable属性设置为true。
2.接下来就要设置拖动的内容。（ondragstart和setdata（））
 Ondragstart属性用来调用函数，drag（event）规定了被拖动的数据。
Datatransfer.setdata（“text”,ev.target.id）设置了被拖数据的数据类型和值，特别的，在这个例子中，数据类型是“text”，值是可拖动元素的id（“drag1”）。
3.然后要设置放到何处。（ondragover）
在默认情况下，无法将拖动的数据/元素放置到其他元素中，如果需要设置允许放置，则要通过调用ondragover事件的event.preventdefault（）方法。
4.在进行放置数据的过程中，会发生drop事件，所谓drop事件就是指在一个拖动过程中，释放鼠标键时触发此事件。
`function drop(ev)
{
ev.preventDefault();
var data=ev.dataTransfer.getData("Text");
ev.target.appendChild(document.getElementById(data));
}`
##### 代码解释：
    调用 preventDefault() 来避免浏览器对数据的默认处理（drop 事件的默认行为是以链接形式打开）
    通过 dataTransfer.getData("Text") 方法获得被拖的数据。该方法将返回在 setData() 方法中设置为相同类型的任何数据。
    被拖数据是被拖元素的 id ("drag1")
把被拖元素追加到放置元素（目标元素）中。
##### Canvas元素用于在网页上绘制图形：
1.由于canvas元素本身是不具备绘图能力的，所有的绘制工作必须在JavaScript内部完成，所以JavaScript会使用id来寻找canvas元素：
var c=document.getElementById（“mycanvas”）
其中mycanvas表示的是之前向HTML5页面添加的canvas元素.
2.然后要创建context对象：
Var cxt=c.getContext（“2d”）；
其中getContext（“2d”）对象是内建的HTML5对象，拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法。它表示在画布上返回一个绘画的环境，其中2d表示二维。
3.接着就可以用fillstyle设置图形颜色，格式为 cxt.fillstyle=“#”；可以用fillrect设置形状、位置和尺寸，格式为cxt.fillrect（）；
4.接下来会通过moveto和lineto设置路径，其中moveto为起始坐标，lineto为终点坐标，并且在不规定颜色的情况下，默认线条颜色为黑色。
5.最后调用的stroke函数是要使用笔触，而fill代表填充。
##### 在画布上做圆形时:
cxt.arc(70,18,15,0,Math.PI*2,true)；括号内第一个和第二个参数，代表圆心坐标。第三个参数是圆的半径。第四个参数代表圆周起始位置，0 PI就是起始位置。第五个参数是弧长Math.PI*2，就是整个圆，Math.PI是半圆。第六个参数是一个布尔值，true是顺时针，false是顺时针。
##### 注意：
在 canvas 中，一旦图形被绘制完成，它就不会继续得到浏览器的关注。如果其位置发生变化，那么整个场景也需要重新绘制，包括任何或许已被图形覆盖的对象。
##### HTML5支持内联SVG：
SVG：SVG 指可伸缩矢量图形 (Scalable Vector Graphics)， SVG 图像在放大或改变尺寸的情况下其图形质量不会有损失。与其他图像格式相比（比如 JPEG 和 GIF），使用 SVG 的优势在于：SVG 图像可通过文本编辑器来创建和修改，可被搜索、索引、脚本化或压缩，是可伸缩的，可在任何的分辨率下被高质量地打印，可在图像质量不下降的情况下被放大。
#####有关fill-rule两个属性的解释：
1.nonzero—这个规则通过从canvas上的某个点往任一方向绘制射线到无穷远，然后检查图形的线段和射线相交的点，来确定“内部区域”。从0开始计数，每次路径线段是从左到右穿过射线就加一，从右到左的就减一。通过计算交叉点，如果结果是0，则这个点在路径外边，不然，就是在里边。
2.evenodd—这个规则通过从canvas上某个点往任一方向绘制射线到无穷远，然后计算给定图形上线段路径和该射线交叉点的数量。如果这个数是奇数，那么该点在图形内部；如果是偶数，该点在图形外部。
##### 把SVG直接嵌入HTML页面实例：
<body>

<svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="190">
  <polygon points="100,10 40,180 190,60 10,60 160,180"
  style="fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;" />
</svg>

</body>
##### Web 存储：
sessionStorage 方法针对一个 session 进行数据存储。当用户关闭浏览器窗口后，数据会被删除。
localStorage 方法存储的数据没有时间限制。第二天、第二周或下一年之后，数据依然可用。
##### 应用程序缓存：
使用 HTML5，通过创建 cache manifest 文件，可以轻松地创建 web 应用的离线版本。
如需启用应用程序缓存，请在文档的 <html> 标签中包含 manifest 属性：
<!DOCTYPE HTML>
<html manifest="demo.appcache">
...
</html>
manifest 文件的建议的文件扩展名是：".appcache"。
manifest 文件可分为三个部分：
    CACHE MANIFEST - 在此标题下列出的文件将在首次下载后进行缓存
    NETWORK - 在此标题下列出的文件需要与服务器的连接，且不会被缓存
    FALLBACK - 在此标题下列出的文件规定当页面无法访问时的回退页面（比如 404 页面）
